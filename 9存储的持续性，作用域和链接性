//1.使用new运算符初始化p263
//程序清单9.10
#include<iostream>
#include<cstring>
#include<new>
using namespace std;
const int BUF = 512;
const int N = 5;
char buffer[BUF];
int main()
{
    double * pd1, * pd2;
    int i;
    cout << "Calling new and placement new:\n";
    pd1 = new double[N];
    //給double类型数组分配内存空间
    pd2 = new (buffer) double[N];
    for (i = 0; i < N; i++)
    {
        pd2[i] = pd1[i] = 1000 + 20.0 * i;
    }
    cout << "Memory addresses: \n" << endl << "heap: "
    << pd1 << " static: " << (void *)buffer << endl;//buffer为char指针(void *)强制转换类型使其输出地址否则为字符串为																										
    cout << "Memory contents: \n";
    for (i = 0; i < N; i++)
    {
        cout << pd1[i] << " at: " << &pd1[i] << "; ";
        cout << pd2[i] << " at: " << &pd2[i] << endl;   
    }
    cout << "\n Calling new and placement new a second time:\n";
    double * pd3, *pd4;
    pd3 = new double[N];
    pd4 = new (buffer) double[N];
    for (i = 0; i < N; i++)
    {
        pd3[i] = pd4[i] = 1000 + 40.0 * i;
    }
    cout << "Memory contents: \n";
    for (i = 0; i < N; i++)
    {
        cout << pd3[i] << " at: " << &pd3[i] << ": ";
        cout << pd4[i] << " at: " << &pd4[i] << endl;
    }
    cout << "\n Calling new and placement new a third time:\n";
    delete [] pd1;
    pd1 = new double[N];
    pd2 = new (buffer + N * sizeof(double)) double[N];
    for (i = 0; i < N; i++)
    {
        pd2[i] = pd1[i] = 1000 + 60 * i;
    }
    cout << "Memory contents:\n";
    for (i = 0; i < N; i++)
    {
        cout << pd1[i] << " at: " << &pd1[i] << "; ";
        cout << pd2[i] << " at: " << &pd2[i] << endl;   
    }
    return 0;
}


