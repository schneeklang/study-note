//程序清单8.4(？指针的结果并没有交换)
#include<iostream>
#include<cstring>
using namespace std;
void swapr(int & a, int & b);
void swapp(int * p, int * q);
void swapv(int a, int b);

int main()
{
    int wallet1 = 300;
    int wallet2 = 350;
    cout << "wallet1 = $" << wallet1 << endl;
    cout << "wallet2 = $" << wallet2 << endl;
    cout << "Using references to swap contents: \n";
    swapr(wallet1, wallet2);
    cout << "wallet1 = $" << wallet1 << endl;
    cout << "wallet2 = $" << wallet2 << endl;
    cout << "Using pointers to swap contents again: \n";
    swapp(&wallet1, &wallet2);
    cout << "wallet1 = $" << wallet1 << endl;
    cout << "wallet2 = $" << wallet2 << endl;
    cout << "Tring to use passing by value: \n";
    swapv(wallet1, wallet2);
    cout << "wallet1 = $" << wallet1 << endl;
    cout << "wallet2 = $" << wallet2 << endl;
    return 0;
}

void swapr(int & a, int & b)
{
    int i;
    i = b;
    b = a;
    a = i;
}

void swapp(int * p, int * q)
{
    int i;
    i = *q;
    *q = *p;
    *p = i;
}

void swapv(int a, int b)
{
    int i;
    i = b;
    b = a;
    a = i;
}

//程序清单8.13(显式具体化p236)
#include<iostream>
#include<cstring>
using namespace std;
template<typename T>
void Swap(T & a, T & b);
//两者同时出现注意结构
struct job
{
    char name[40];
    double salary;
    int floor; 
};
template <> void Swap<job>(job & a, job & b);
//注意显式具体化结构
void show(job & j);

int main()
{
    cout.precision(2);
    cout.setf(ios :: fixed, ios :: floatfield);
    int i = 10, j = 20;
    cout << "i, j = " << i << ", " << j << ".\n";
    cout << "Using compiler-generated int swaper:\n";
    Swap(i, j);
    cout << "Now i, j = " << i << ", " << j << ".\n";
    job sue = {"Susan Yaffee", 73000.60, 7};
    job sidney = {"Sidney Taffee", 78060.72, 9};
    cout << "Before swapping:\n";
    show(sue);
    show(sidney);
    Swap(sue, sidney);
    cout << "After job swapping:\n";
    show(sue);
    show(sidney);
    return 0;
}

template <typename T>
void Swap(T & a, T & b)
{
    T temp;
    temp = a;
    a = b;
    b = temp;
}
//定义时的结构

template <> void Swap<job>(job & j1, job & j2)
{
    double t1;
    int t2;
    t1 = j1.salary;
    j1.salary = j2.salary;
    j2.salary = t1;
    t2 = j1.floor;
    j1.floor = j2.floor;
    j2.floor = t2;
}

void show(job & j)
{
    cout << j.name << ": $" << j.salary
    << "on floor " << j.floor << endl;
}
//注意P237编译器选择使用那个版本函数
